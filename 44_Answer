// 44. Find the longest substring without repeating characters.

import java.util.*;

class LongestUniqueSubstring {
    public static void main(String[] args) {
        String s = "abcabcbb";
        Set<Character> set = new HashSet<>();
        int left = 0, maxLen = 0;
        
        for (int right = 0; right < s.length(); right++) {
            while (set.contains(s.charAt(right))) {
                set.remove(s.charAt(left));
                left++;
            }
            set.add(s.charAt(right));
            maxLen = Math.max(maxLen, right - left + 1);
        }
        
        System.out.println("Longest unique substring length: " + maxLen);
    }
}
// Time Complexity: O(N)
// Space Complexity: O(N)
