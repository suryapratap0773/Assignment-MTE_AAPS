// 6. Find the length of the longest substring without repeating characters.
class LongestUniqueSubstring {
    public static void main(String[] args) {
        String s = "abcabcbb";
        int[] lastIndex = new int[256];
        for (int i = 0; i < 256; i++) lastIndex[i] = -1;
        
        int maxLength = 0, start = 0;
        for (int i = 0; i < s.length(); i++) {
            if (lastIndex[s.charAt(i)] >= start) {
                start = lastIndex[s.charAt(i)] + 1;
            }
            lastIndex[s.charAt(i)] = i;
            maxLength = Math.max(maxLength, i - start + 1);
        }
        System.out.println("Longest unique substring length: " + maxLength);
    }
}
// Time Complexity: O(N)
// Space Complexity: O(1)
